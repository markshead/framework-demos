apply plugin: "java"
apply plugin: "maven"
apply plugin: "idea"
apply plugin: "jetty"
apply plugin: "cargo"

group = "net.xeric.jpademo"
version = "1.0-SNAPSHOT"
description = "Tapestry based JPA application"

project.ext.versions = [
        tapestry: "5.3.4",
]

project.ext {
    getUsername = { getProperty(appsUsername) }
    getPassword = { getProperty(appsPassword) }
    getHostname = { getProperty(appsHostname) }
}

configurations {
    provided
}
sourceSets {
    main { compileClasspath += configurations.provided }
}

dependencies {
    compile "org.apache.tapestry:tapestry-core:$versions.tapestry"
    compile "org.apache.tapestry:tapestry-jpa:$versions.tapestry"
    compile "javax.validation:validation-api:1.0.0.GA"
    compile "org.eclipse.persistence:eclipselink:2.3.2"
    compile "net.xeric.libs.tap5:tap5-sourcecode:1.2-SNAPSHOT"
    compile "javax.servlet:servlet-api:2.5"

    runtime "com.h2database:h2:1.3.167"

    def cargoVersion = '1.2.2'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion", "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

repositories {
    mavenCentral();
    mavenRepo url:"http://download.eclipse.org/rt/eclipselink/maven.repo"
    maven {
        credentials {
            username xericDeployUserName
            password xericDeployPassword
        }
        url "http://apps.xeric.net/nexus/content/repositories/snapshots"
    }
}

idea {
    project {
        jdkName = "1.6"
    }
    module {
        inheritOutputDirs = false
        outputDir = file("build/classes/main")
        testOutputDir = file('build/classes/test')

        downloadJavadoc = true
        downloadSources = true
    }
}

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organization]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-cargo-plugin:0.5.4'
    }
}

cargo {
    containerId = 'tomcat6x'
    port = 80
    deployable {
        context = 'springmvc'
    }

    remote {
        hostname = getHostname()
        username = getUsername()
        password = getPassword()
    }

}

task writePom << {
    pom {
        project {

            repositories {
                repository {
                    id  = "Eclipse Link Repository"
                    url = "http://download.eclipse.org/rt/eclipselink/maven.repo"
                }
                repository {
                    id  = "Xeric"
                    url = "http://apps.xeric.net/nexus/content/groups/public/"
                }
            }

            build {
                plugins {

                    plugin {
                        groupId = "org.mortbay.jetty"
                        artifactId = "maven-jetty-plugin"
                        version = "6.1.9"
                    }

                }
            }

        }
    }.writeTo("pom.xml")
}

